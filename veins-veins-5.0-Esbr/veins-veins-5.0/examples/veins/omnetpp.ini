[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s
**.cmdenv-log-level = info

ned-path = .
#ned-path = .;../../src/veins;/opt/veins-veins-5.0/examples/veins;/opt/veins-veins-5.0/images;/opt/omnetpp-5.5.1/images

#ned-path = .;../veins;../../src/veins;../../src/veins/modules/obstacle;/opt/veins-veins-5.0/examples/veins;/opt/veins-veins-5.0/src/veins;/opt/veins-veins-5.0/images;/opt/omnetpp-5.5.1/images

repeat = 1


image-path = ../../images

network = RSUExampleScenario


##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

sim-time-limit = 200s

**.scalar-recording = true
**.vector-recording = true

*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m


##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = true

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("erlangen.launchd.xml")

##########################################################
#                       RSU SETTINGS                     #
#                                                        #
#                                                        #
##########################################################
*.rsu[0].mobility.x = 2000
*.rsu[0].mobility.y = 2000
*.rsu[0].mobility.z = 3

*.rsu[1].mobility.x = 1500
*.rsu[1].mobility.y = 1500
*.rsu[1].mobility.z = 3




*.rsu[*].applType = "MyRSU11p"#"TraCIDemoRSU11p"
*.rsu[*].appl.headerLength = 80 bit
*.rsu[*].appl.sendBeacons = false
*.rsu[*].appl.dataOnSch = false
*.rsu[*].appl.beaconInterval = 1s
*.rsu[*].appl.beaconUserPriority = 7
*.rsu[*].appl.dataUserPriority = 5
*.rsu[*].nic.phy80211p.antennaOffsetZ = 0 m

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.mac1609_4.bitrate = 6Mbps
*.**.nic.phy80211p.minPowerLevel = -110dBm

*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -98dBm

*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")
*.node[*].nic.phy80211p.antennaOffsetY = 0 m
*.node[*].nic.phy80211p.antennaOffsetZ = 1.895 m

##########################################################
#                      App Layer                         #
##########################################################
#*.node[*].applType = "MyVehicle11p"
*.node[*].appl.headerLength = 80 bit
*.node[*].appl.sendBeacons = false
*.node[*].appl.dataOnSch = false
*.node[*].appl.beaconInterval = 1s

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 0
*.node[*].veinsmobility.setHostSpeed = true
#*.node[*0].veinsmobility.accidentCount = 1
#*.node[*0].veinsmobility.accidentStart = 0s
#*.node[*0].veinsmobility.accidentDuration = 20s

*.node[10].veinsmobility.accidentCount = 1
*.node[10].veinsmobility.accidentStart = 120s
*.node[10].veinsmobility.accidentDuration = 20s
*.node[*].appl.indexOfAccidentNode = 10

*.node[*].appl.counterThreshold = 5
[Config Default]
*.node[*].applType = "MyVehicle11p"
#*.node[*].applType = "MITM"

[Config MITM]
*.node[*5].applType = "MITM"
*.node[*].applType = "MyVehicle11p"

*.node[..8].appl.corruptedMsgSignal.scalar-recording = true
*.node[..8].appl.corruptedMsgSignal.vector-recording = true
*.node[9..].appl.MTIMSignal.scalar-recording = true
*.node[9..].appl.MTIMSignal.vector-recording = true

[Config PreventMITM]
*.node[9..].applType = "MyVehicle11p"
*.node[..8].applType = "MITM"
*.node[9..].appl.corruptedMsgSignal.scalar-recording = true
*.node[9..].appl.corruptedMsgSignal.vector-recording = true
*.node[9..].appl.preventMsgSignal.scalar-recording = true
*.node[9..].appl.preventMsgSignal.vector-recording = true

*.node[..8].appl.MTIMSignal.scalar-recording = true
*.node[..8].appl.MTIMSignal.vector-recording = true

*.node[9..].appl.prevent=1

[Config WithBeaconing]
*.node[*].applType = "MyVehicle11p"
*.rsu[*].appl.sendBeacons = false
*.node[*].appl.sendBeacons = false

[Config WithChannelSwitching]
*.**.nic.mac1609_4.useServiceChannel = true
*.node[*].appl.dataOnSch = true
*.rsu[*].appl.dataOnSch = true

[Config Counter]
description = "Counter based dissemination without beacon"
*.node[*].applType = "MyVehicle11p"
*.node[*].appl.counterThreshold = 1
*.rsu[*].appl.sendBeacons = false
*.node[*].appl.sendBeacons = false


[Config CounterStat]
description = "Counter based dissemination"
*.node[*].applType = "MyVehicle11p"
*.node[*].appl.counterThreshold = 1
*.rsu[*].appl.sendBeacons = true
*.node[*].appl.sendBeacons = true
*.node[*].hopCount.result-recording-modes = -vector

*.node[*].appl.warningReceivedSignal.scalar-recording = true
*.node[*].appl.warningReceivedSignal.vector-recording = true

*.node[*].appl.beaconReceivedSignal.scalar-recording = true
*.node[*].appl.beaconReceivedSignal.vector-recording = true


[Config Esbr]
description = "ESBR based dissemination"
*.node[*].applType = "Esbr"
*.node[*].appl.counterThreshold = 1
*.rsu[*].appl.sendBeacons = true
*.node[*].appl.sendBeacons = true
*.node[*].hopCount.result-recording-modes = -vector

*.node[*].appl.warningReceivedSignal.scalar-recording = true
*.node[*].appl.warningReceivedSignal.vector-recording = true

*.node[*].appl.beaconReceivedSignal.scalar-recording = true
*.node[*].appl.beaconReceivedSignal.vector-recording = true



